apply plugin: 'java'
apply plugin: 'application'
mainClassName = "ru.stqa.trening.sandbox.MyFirstProgram"

repositories {
    mavenCentral()
}

configurations {
    agent
}

dependencies {
    implementation 'org.testng:testng:7.4.0'
    implementation 'org.seleniumhq.selenium:selenium-java:4.1.0'
    implementation 'org.hamcrest:java-hamcrest:2.0.0.0'
    implementation 'com.beust:jcommander:1.81'
    implementation 'com.thoughtworks.xstream:xstream:1.4.18'
    implementation 'com.google.code.gson:gson:2.8.9'
    implementation 'ch.qos.logback:logback-classic:1.3.0-alpha12'
    implementation 'mysql:mysql-connector-java:8.0.27'
    implementation 'com.jayway.restassured:rest-assured:2.9.0'
    testImplementation 'org.hibernate:hibernate-core:5.4.33'
    agent "org.aspectj:aspectjweaver:1.8.0"
    implementation "ru.yandex.qatools.allure:allure-testng-adaptor:1.4.0.RC4"
    implementation 'org.robotframework:robotframework:4.1.2'
    implementation 'info.cukes:cucumber-java:1.2.6'
    implementation 'info.cukes:cucumber-testng:1.2.6'
}


task testGroups(type: Test) {
    useTestNG() {
        suites 'src/test/resources/testng-groups.xml'
    }
    if (project.hasProperty('browser')) {
        systemProperty 'browser', "${browser}"
    }
    if (project.hasProperty('platform')) {
        systemProperty 'platform', "${platform}"
    }
    if (project.hasProperty('target')) {
        systemProperty 'target', "${target}"
    }

    if (project.hasProperty('groupsVerifyUI')) {
        systemProperty 'groupsVerifyUI', "${groupsVerifyUI}"
    }

    if (project.hasProperty('usersVerifyUI')) {
        systemProperty 'usersVerifyUI', "${usersVerifyUI}"
    }

}

testGroups.doFirst {
    jvmArgs "-javaagent:${configurations.agent.singleFile}"
}

task testUsers(type: Test) {
    useTestNG() {
        suites 'src/test/resources/testng-users.xml'
    }
    if (project.hasProperty('browser')) {
        systemProperty 'browser', "${browser}"
    }
    if (project.hasProperty('platform')) {
        systemProperty 'platform', "${platform}"
    }
    if (project.hasProperty('target')) {
        systemProperty 'target', "${target}"
    }

    if (project.hasProperty('groupsVerifyUI')) {
        systemProperty 'groupsVerifyUI', "${groupsVerifyUI}"
    }

    if (project.hasProperty('usersVerifyUI')) {
        systemProperty 'usersVerifyUI', "${usersVerifyUI}"
    }

}

task rf(type: JavaExec) {
    main = 'org.robotframework.RobotFramework'
    classpath = sourceSets.test.runtimeClasspath
    args '--outputdir', 'build/rf-report'
    args 'src/test/resources/rf'
}